name: CI/CD
on:
  - merge_group
  - pull_request
  - push
  - workflow_dispatch

env:
  FORCE_COLOR: 1

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  pre-commit:
    name: Run pre-commit
    runs-on: ubuntu-latest
    steps:
      - name: Check out Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.11'

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  test:
    name: Test on Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs:
        - pre-commit
    strategy:
      matrix:
        os:
            - macOS-latest
            - ubuntu-latest
            - windows-latest
        python-version:
            - '3.8'
            - '3.9'
            - '3.10'
            - '3.11'
            - '3.12'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.0.0
        with:
          allow-prereleases: true
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip poetry
            poetry install --with test

      - name: Run tests
        run: |
            poetry run pytest

  build:
    name: Build distribution
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip poetry
            poetry install

      - name: Build package
        run: |
          poetry build --no-interaction
    
      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  publish-to-pypi:
    name: Publish to PyPI
    if: |
      github.repository == 'arkid15r/iso-standards' &&
      github.event_name == 'push' &&
      startsWith(github.event.ref, 'refs/tags/v')
    environment: main
    needs:
      - build
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Get package artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
